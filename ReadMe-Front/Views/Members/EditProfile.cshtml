@model ReadMe_Front.Models.ViewModels.ProfileVm

@{
	ViewBag.Title = "EditProfile";
	Layout = "~/Views/Shared/_LayoutMember.cshtml"; // 指定 Layout
	//var record = Model;
}

<h2>會員中心</h2>

<style>
	/* Flexbox 排版 */
	.profile-container {
		display: flex;
		align-items: stretch; /* 子項目高度一致 */
		gap: 20px; /* 左右區塊的間距 */
	}
	.form-group {
		margin-top: 8px; /* 增加下方間距 */
		margin-bottom: 20px; /* 增加下方間距 */
	}

	.content-area h2 {
		font-size: 24px; /* 設置字體大小 */
		
		color: #333; /* 可選：字體顏色 */
		margin-bottom: 20px; /* 可選：調整下方間距 */
	}
	/* 左側 Sidebar */
	.member-sidebar {
		width: 200px; /* 固定寬度 */
		padding: 20px; /* 增加內邊距 */
		border-right: 1px solid #ddd; /* 增加右邊框 */
		display: flex;
		flex-direction: column; /* 垂直排列 */
		justify-content: space-between; /* 均勻分布內容 */
	}

	/* 調整文字大小和間距 */
	.member-sidebar ul {
		padding: 0; /* 移除內邊距 */
		list-style: none; /* 移除列表符號 */
	}

	.member-sidebar li {
		font-size: 18px; /* 調整文字大小 */
	}
	.member-sidebar a {
		text-decoration: none;
		color: black;
	}
	.content-area {
		flex: 1; /* 填滿剩餘空間 */
		padding: 20px;
		background-color: #fff; /* 背景色 */
		border: 1px solid #ddd; /* 外框 */
		border-radius: 5px; /* 圓角 */
	}
</style>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
		<div class="profile-container">

			<!-- 左側固定分類欄 -->
			<div class="list-group list-group-flush member-sidebar">
				<ul>
					<li class="list-group-item list-group-item-action"><a href="#">訂單紀錄</a></li>
					<li class="list-group-item list-group-item-action"><a href="~/Members/EditProfile">編輯會員資料</a></li>
					<li class="list-group-item list-group-item-action"><a href="~/Members/ChangePassword">修改密碼</a></li>
				</ul>
			</div>
			<!--左側固定分類藍-->

			<!-- 右側內容區 -->
			<div class="content-area">
				<h2>編輯會員資料</h2>

				<div class="form-horizontal">
					<hr />
					<div class="form-group d-flex align-items-center">
					@Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label me-2" })
					@Html.TextBoxFor(model => model.Account, new { @class = "form-control-plaintext", @readonly = "readonly" })
				</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						<div class="col-md-offset-2 col-md-10">
							<input type="submit" value="確認修改" class="btn btn-success" />
						</div>
					</div>
				</div>
			
			</div>
		</div>

}


@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
