
@{
    ViewData["Title"] = "OrderMain";
    Layout= "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
    <style>
        /* 自定義樣式 */
        .search-container {
            margin-bottom: 20px;
        }
        .search-container input,
        .search-container select,
        .search-container button {
            margin-right: 10px;
        }
        .table-container {
            margin-top: 20px;
        }
        .pagination-container {
            margin-top: 20px;
            text-align: center;
        }
    </style>

<body>
    <div class="container mt-4" id="app">
        <h1>訂單管理</h1>

        <!-- 搜尋條件區域 -->
        <div class="search-container row">
            <div class="col-md-2">
                <label for="start-date" class="form-label">開始時間</label>
                <input type="date" id="start-date" class="form-control">
            </div>
            <div class="col-md-2">
                <label for="end-date" class="form-label">結束時間</label>
                <input type="date" id="end-date" class="form-control">
            </div>
            <div class="col-md-2">
                <label for="order-type" class="form-label">數量</label>
                <select id="order-type" class="form-select">
                    <option>數量>5</option>
                    <option>數量>10</option>
                    <option>數量多排序</option>
                    <option>數量少排序</option>

                </select>
            </div>
            <div class="col-md-2">
                <label for="payment-method" class="form-label">金額</label>
                <select id="payment-method" class="form-select">
                    <option>金額>1000</option>
                    <option>金額>3000</option>
                    <option>金額高排序</option>
                    <option>金額低排序</option>
                </select>
            </div>
              <div class="col-md-2">
                <label for="global-search" class="form-label">搜尋</label>
                <input type="text"
                       id="global-search"
                       class="form-control"
                       placeholder="訂單編號or收件人姓名"
                       v-model="searchQuery">
             </div>
            <div class="col-md-2 d-flex align-items-end">
                <button class="btn btn-primary w-100">查詢</button>
            </div>
        </div>

        <!-- 表格展示 -->
        <div class="table-container">
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>訂單編號</th>
                        <th>收件人姓名</th>
                        <th>商品數量</th>
                        <th>總金額</th>
                        <th>建立日期</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="(order, index) in filteredOrders" :key="index">
                        <td>{{ order.orderNumber }}</td>
                        <td>{{ order.recipientName }}</td>
                        <td>{{ order.productCount }}</td>
                        <td>{{ order.totalAmount }}</td>
                        <td>{{ order.createdDate }}</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <!-- 分頁區域 -->
        <div class="pagination-container">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <li class="page-item"><a class="page-link" href="#">第一頁</a></li>
                    <li class="page-item"><a class="page-link" href="#">上一頁</a></li>
                    <li class="page-item"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">下一頁</a></li>
                    <li class="page-item"><a class="page-link" href="#">最後一頁</a></li>
                </ul>
            </nav>
        </div>
    </div>

    <!-- 引入 Bootstrap 的 JavaScript -->
    <script src="~/js/vue.global.js"></script>
    <script src="~/js/Api.js"></script>
    <script>
        const { createApp, ref, computed, onMounted } = Vue;

        const appConfig = {
            setup() {
                // 訂單資料
                const orders = ref([]);

                // 搜尋輸入框的數值
                const searchQuery = ref("");

                // 資料加載狀態
                const isLoading = ref(false);

                // 錯誤訊息
                const errorMessage = ref("");

                // 搜尋輸入框的數值
                const searchQuery = ref("");


                // 根據搜尋條件過濾訂單資料
                const filteredOrders = computed(() => {
                    if (!searchQuery.value) {
                        return orders.value;
                    }
                    return orders.value.filter((order) =>
                        order.orderNumber.includes(searchQuery.value) ||
                        order.recipientName.includes(searchQuery.value)
                    );
                });

                // 從 API 獲取訂單資料
                const fetchOrders = async () => {
                    try {
                        isLoading.value = true; // 開始加載
                        errorMessage.value = ""; // 清除舊的錯誤訊息
                        const queryParams = {
                            search: searchQuery.value, // 可根據 API 支援的查詢參數調整
                        };
                        const result = await fetchOrderSearch(queryParams); // 調用 API 函數
                        orders.value = result; // 更新訂單資料
                    } catch (error) {
                        errorMessage.value = "無法獲取訂單資料，請稍後再試。";
                        console.error(error);
                    } finally {
                        isLoading.value = false; // 結束加載
                    }
                };

                // 初次加載資料
                onMounted(() => {
                    fetchOrders(); // 頁面載入時呼叫 API
                });


                return { 
                    orders, 
                    searchQuery, 
                    filteredOrders, 
                    fetchOrders, 
                    isLoading, 
                    errorMessage };
            },
        };

        createApp(appConfig).mount("#app");
    </script>
</body>
</html>



